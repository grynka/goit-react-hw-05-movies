{"version":3,"file":"static/js/674.35a9a848.chunk.js","mappings":"8NAuBaA,IApBOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iLAYGA,EAAAA,GAAAA,GAAH,oGAQGA,EAAAA,GAAAA,GAAH,uGAIJE,EAAQF,EAAAA,GAAAA,IAAH,wEAKLG,EAAQH,EAAAA,GAAAA,EAAH,+G,mBCIlB,EA/BkB,SAAC,GAAe,IAAbI,EAAY,EAAZA,MACXC,EAA2CD,EAA3CC,GAAIC,EAAuCF,EAAvCE,cAAeC,EAAwBH,EAAxBG,MAAOC,EAAiBJ,EAAjBI,aAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACX,EAAD,WACE,UAAC,KAAD,CAAMY,GAAE,kBAAaN,GAAMO,MAAO,CAAEC,KAAMJ,GAA1C,WACE,SAACP,EAAD,CACEY,IACER,EAAa,yCACyBA,GAClCS,EAENC,IAAKT,EACLU,MAAM,SAER,UAACd,EAAD,WACGI,EADH,KACYC,EAAeA,EAAaU,MAAM,EAAG,GAAK,MADtD,WAXOb,EAiBd,ECzBYc,EAAOnB,EAAAA,GAAAA,GAAH,oG,UCEXoB,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACE,SAAC,EAAD,UACGA,EAAOC,KAAI,SAAAlB,GAAK,OACf,SAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMC,GADP,KAKtB,EAEDe,EAAUG,UAAY,CACpBF,O,MAAQG,GAAAA,OAGV,O,oJCfaC,EAAczB,EAAAA,EAAAA,KAAH,uNAYX0B,EAAS1B,EAAAA,EAAAA,OAAH,6SAcJ2B,EAAQ3B,EAAAA,EAAAA,KAAH,6MAYP4B,EAAQ5B,EAAAA,EAAAA,MAAH,4Q,kBCZlB,EAxBmB,SAAC,GAAyB,IAAvB6B,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC9B,GAA0BC,EAAAA,EAAAA,UAASD,GAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,OACE,UAACR,EAAD,CAAaI,SAAUA,EAAvB,WACE,SAACD,EAAD,CACEM,KAAK,OACLC,KAAK,QACLC,SAAU,SAAAC,GAAC,OAAIJ,EAASI,EAAEC,OAAOR,MAAtB,EACXA,MAAOE,EACPO,YAAY,sBAEd,UAACb,EAAD,CAAQQ,KAAK,SAASM,UAAU,SAAhC,WACE,SAAC,MAAD,KACA,SAACb,EAAD,0BAIP,ECgBD,EAhCe,WAAO,IAAD,EACnB,GAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeoB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAqBhD,OAnBAC,EAAAA,EAAAA,YAAU,WACW,KAAfF,IACFG,EAAAA,EAAAA,GAAW,SAAUH,GAAYI,KAAKR,EAEzC,GAAE,CAACI,KAgBF,iCACE,SAAC,EAAD,CAAYhB,SAfhB,SAAkBQ,GAChBA,EAAEa,iBACF,IACMpB,EADQO,EAAEC,OAAOa,SAASnB,MAC1BF,MAEDA,EAKLc,EAAgB,CAAEZ,MAAOF,IAJvBsB,MAAM,qDAKT,EAImCtB,MAAOe,KACvC,SAACzB,EAAA,EAAD,CAAWC,OAAQA,MAGxB,C","sources":["components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.js","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: orangered;\n  }\n`;\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\nlist-style: none;\ngap: 16px;\npadding: 0;`;\n\n\nexport const Item = styled.li`\nwidth: calc((100% - 64px) / 5);\nbox-shadow: rgb(204 204 204) 0px 0px 8px 1px;`;\n\nexport const Image = styled.img`\nwidth: 100%;\nheight: 330px;\nobject-fit: cover;`;\n\nexport const Title = styled.p`\n    font-size: 20px;\n    font-weight: 500;\n    padding: 12px 10px;\n    color: black;`;","import { Link, useLocation } from 'react-router-dom';\nimport { Item, Image, Title } from 'components/MovieItem/MovieItem.styled';\nimport poster from '../../image/default.jpg';\nimport PropTypes from 'prop-types';\n\nconst MovieItem = ({ movie }) => {\n  const { id, backdrop_path, title, release_date } = movie;\n  const location = useLocation();\n\n  return (\n    <Item key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <Image\n          src={\n            backdrop_path\n              ? `https://image.tmdb.org/t/p/w780${backdrop_path}`\n              : poster\n          }\n          alt={title}\n          width=\"300\"\n        ></Image>\n        <Title>\n          {title} ({release_date ? release_date.slice(0, 4) : 'N/A'})\n        </Title>\n      </Link>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  poster_path: PropTypes.string,\n  release_date: PropTypes.string,\n};\n\nexport default MovieItem;\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\nlist-style: none;\ngap: 16px;\npadding: 0;`;","import MovieItem from 'components/MovieItem/MovieItem';\nimport { List } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(movie => (\n        <MovieItem key={movie.id} movie={movie} />\n      ))}\n    </List>\n  );\n};\n\nMovieList.ptopTypes = {\n  movies: PropTypes.array,\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\n\nexport const SearchForms = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  margin: 0 auto;\n  border: 1px solid;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n`;\n\n  export const Label = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 24px;\n  padding-right: 4px;\n  height: 48px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;","import { SearchForms, Button, Label, Input } from './SearchForm.styled';\nimport { ImSearch } from 'react-icons/im';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ onSubmit, value }) => {\n  const [query, setQuery] = useState(value);\n  return (\n    <SearchForms onSubmit={onSubmit}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        onChange={e => setQuery(e.target.value)}\n        value={query}\n        placeholder=\"search movies...\"\n      />\n      <Button type=\"submit\" className=\"button\">\n        <ImSearch />\n        <Label>Search</Label>\n      </Button>\n    </SearchForms>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { loadMovies } from 'service/API';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from 'components/MovieList/MovieList';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParam = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (queryParam !== '') {\n      loadMovies('search', queryParam).then(setMovies);\n    }\n  }, [queryParam]);\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const input = e.target.elements.query;\n    let { value } = input;\n\n    if (!value) {\n      alert('Enter the name of the movie, for a correct search!');\n      return;\n    }\n\n    setSearchParams({ query: value });\n  }\n\n  return (\n    <>\n      <SearchForm onSubmit={onSubmit} value={queryParam} />\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Item","styled","NavLink","Image","Title","movie","id","backdrop_path","title","release_date","location","useLocation","to","state","from","src","poster","alt","width","slice","List","MovieList","movies","map","ptopTypes","PropTypes","SearchForms","Button","Label","Input","onSubmit","value","useState","query","setQuery","type","name","onChange","e","target","placeholder","className","setMovies","useSearchParams","searchParams","setSearchParams","queryParam","get","useEffect","loadMovies","then","preventDefault","elements","alert"],"sourceRoot":""}